{"version":3,"sources":["../src/LayerToggle.js"],"names":["LayerToggle","props","context","unsubscribe","layerStore","subscribeToLayer","for","console","log","getStack","setTimeout","setState","children","show","hide","stack","isActive","indexOf","args","getLayer","contextTypes","object"],"mappings":"gnBAAA,8B;;AAEqBA,W;;AAEnB,uBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AACpBD,SADoB,EACbC,OADa;AAE1B,UAAKC,WAAL,GAAmB,IAAnB;AACA,UAAKC,UAAL,GAAkBF,QAAQE,UAA1B,CAH0B;AAI3B,G;;AAEoB;AACnB,WAAKD,WAAL,GAAmB,KAAKC,UAAL,CAAgBC,gBAAhB,CAAiC,KAAKJ,KAAL,CAAWK,GAA5C,EAAiD,YAAM;AACxEC,gBAAQC,GAAR,CAAY,OAAKJ,UAAL,CAAgBK,QAAhB,EAAZ;AACAC,mBAAW,oBAAM,OAAKC,QAAL,CAAc,EAAd,CAAN,EAAX,EAAoC,GAApC;AACD,OAHkB,CAAnB;AAID,K;;AAEsB;AACrB,WAAKR,WAAL;AACA,WAAKA,WAAL,GAAmB,IAAnB;AACA,WAAKC,UAAL,GAAkB,IAAlB;AACD,K;;AAES;AACuB,WAAKH,KAD5B,KACAW,QADA,UACAA,QADA,KACaX,KADb;AAEe,WAAKG,UAFpB,KAEAS,KAFA,eAEAA,IAFA,KAEMC,KAFN,eAEMA,IAFN;AAGR,UAAMC,QAAQ,KAAKX,UAAL,CAAgBK,QAAhB,EAAd;AACA,aAAOG,2BAAS;AACdG,oBADc;AAEdC,kBAAUD,MAAME,OAAN,CAAchB,MAAMK,GAApB,MAA6B,CAAC,CAF1B;AAGdO,cAAM,mDAAIK,IAAJ,gDAAIA,IAAJ,iCAAajB,MAAMK,GAAN,GAAYO,MAAKZ,MAAMK,GAAX,EAAgBY,IAAhB,CAAZ,GAAoCL,MAAKK,IAAL,CAAjD,EAHQ;AAIdJ,cAAM,wBAAab,MAAMK,GAAN,GAAYQ,MAAKb,MAAMK,GAAX,CAAZ,GAA8BQ,OAA3C,EAJQ,EAAT;AAKD,WAAKV,UAAL,CAAgBe,QAAhB,CAAyBlB,MAAMK,GAA/B,EAAoCY,IALnC,GAAP;AAMD,K,8DA/BkBlB,W;;;AAkCrBA,YAAYoB,YAAZ,GAA2B;AACzBhB,cAAY,iBAAUiB,MADG,EAA3B","file":"LayerToggle.js","sourcesContent":["import React, { Component, PropTypes, createElement} from 'react'\n\nexport default class LayerToggle extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.unsubscribe = null;\n    this.layerStore = context.layerStore;\n  }\n\n  componentWillMount() {\n    this.unsubscribe = this.layerStore.subscribeToLayer(this.props.for, () => {\n      console.log(this.layerStore.getStack())\n      setTimeout(() => this.setState({}), 100 );\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n    this.unsubscribe = null;\n    this.layerStore = null;\n  }\n\n  render () {\n    const { children, ...props } = this.props;\n    const { show, hide } = this.layerStore;\n    const stack = this.layerStore.getStack();\n    return children({\n      stack,\n      isActive: stack.indexOf(props.for) !== -1,\n      show: (...args) => props.for ? show(props.for, args) : show(args),\n      hide: (...args) => props.for ? hide(props.for) : hide(),\n    }, ...this.layerStore.getLayer(props.for).args);\n  }\n}\n\nLayerToggle.contextTypes = {\n  layerStore: PropTypes.object\n};"]}