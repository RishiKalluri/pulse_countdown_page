{"version":3,"sources":["../src/LayerStore.js"],"names":["LayerStore","_core","_layerSubscriptions","_mountPointsubscriptions","show","bind","hide","update","register","updateFn","unregister","getLayer","getStack","getIndex","isActive","getLayersForMountPoint","id","fn","Set","add","delete","forEach","layerFn","mountPointId","groups","use","defaultArgs","defaultShow","notifyMountPoint","notifyLayer","lastMountPoint","reset","args","stack"],"mappings":"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","file":"LayerStore.js","sourcesContent":["import type { ID, LayerFn } from './types'\n\nimport LayerStoreCore from './LayerStoreCore'\n\nexport default class LayerStore {\n\n  constructor () {\n    this._core = new LayerStoreCore;\n    this._layerSubscriptions = {};\n    this._mountPointsubscriptions = {};\n\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n    this.update = this.update.bind(this);\n    this.register = this.register.bind(this);\n    this.updateFn = this.updateFn.bind(this);\n    this.unregister = this.unregister.bind(this);\n    this.getLayer = this._core.getLayer;\n    this.getStack = this._core.getStack;\n    this.getIndex = this._core.getIndex;\n    this.isActive = this._core.isActive;\n    this.getLayersForMountPoint = this._core.getLayersForMountPoint;\n  }\n\n  subscribeToLayer(id: ID, fn: Function) {\n    if (typeof this._layerSubscriptions[id] === 'undefined') {\n      this._layerSubscriptions[id] = new Set();\n    }\n    this._layerSubscriptions[id].add(fn);\n    return () => {\n      return this._layerSubscriptions[id].delete(fn);\n    }\n  }\n\n  subscribeToMountPoint(id: ID, fn: Function) {\n    if (typeof this._mountPointsubscriptions[id] === 'undefined') {\n      this._mountPointsubscriptions[id] = new Set();\n    }\n    this._mountPointsubscriptions[id].add(fn);\n    return () => {\n      return this._mountPointsubscriptions[id].delete(fn);\n    }\n  }\n\n  notifyLayer(id: ID) {\n    if (this._layerSubscriptions[id]) {\n      this._layerSubscriptions[id].forEach(fn => fn())\n    }\n  }\n\n  notifyMountPoint(id: ID) {\n    if (this._mountPointsubscriptions[id]) {\n      this._mountPointsubscriptions[id].forEach(fn => fn());\n    }\n  }\n\n  register (id: ID, layerFn: LayerFn, mountPointId: ID = null,\n            groups: Array<ID> = [], use: Array<any>, defaultArgs: Array<any> = [],\n            defaultShow: Boolean) {\n    this._core.register(id, layerFn, mountPointId, groups, use, defaultArgs, defaultShow);\n    if (mountPointId) {\n      this.notifyMountPoint(mountPointId);\n    } else {\n      this.notifyLayer(id);\n    }\n  }\n\n  updateFn (id: ID, layerFn: LayerFn, mountPointId: ID = null,\n            groups: Array<ID> = [], use: Array, defaultArgs: Array = [],\n            defaultShow: Boolean) {\n    const lastMountPoint = this.getLayer(id).mountPointId;\n    this._core.updateFn(id, layerFn, mountPointId, groups, use, defaultArgs, defaultShow);\n    if (lastMountPoint !== mountPointId) {\n      this.notifyMountPoint(lastMountPoint);\n      this.notifyMountPoint(mountPointId);\n    } else {\n      this.notifyLayer(id);\n    }\n  }\n\n  reset(id: ID) {\n    this._core.reset(id);\n    this.notifyLayer(id)\n  }\n\n  unregister(id: ID) {\n    this._core.unregister(id);\n  }\n\n  show (id: ID, args: Array) {\n    this._core.show(id, args);\n    this.notifyLayer(id);\n  }\n\n  update(id: ID, args: Array) {\n    this._core.update(id, args);\n    this.notifyLayer(id);\n  }\n\n  hide (id: ID) {\n    const stack = this.getStack();\n    this._core.hide(id);\n    this.notifyLayer(id);\n  }\n}"]}