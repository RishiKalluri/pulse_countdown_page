{"version":3,"sources":["../../src/components/Layer.js"],"names":["Layer","props","context","layerStore","id","children","to","use","defaultArgs","defaultShow","register","newProps","needUpdate","toString","length","i","equals","JSON","stringify","updateFn","elementType","propTypes","array","defaultProps","contextTypes","object"],"mappings":"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","file":"Layer.js","sourcesContent":["import React, { Component, PropTypes, createElement} from 'react';\nimport { isPrimitiveType } from './../common';\nimport LayerStore from './../LayerStore';\nimport LayerMountPoint from './LayerMountPoint';\n\nexport default class Layer extends Component {\n\n  layerStore: LayerStore;\n\n  constructor(props, context) {\n    super(props, context);\n    this.layerStore = context.layerStore;\n  }\n\n  componentWillMount() {\n    const { layerStore } = this.context;\n    const { id, children, to, use, defaultArgs, defaultShow } = this.props;\n    layerStore.register(id, children, to, null, use, defaultArgs, defaultShow);\n  }\n\n  shouldComponentUpdate(newProps) {\n    const { children, id, to, use } = this.props;\n    const { layerStore } = this.context;\n    let needUpdate = false;\n    if (id !== newProps.id || to !== newProps.to) {\n      needUpdate = true;\n    }\n    else if (children.toString() !== newProps.children.toString()) {\n      needUpdate = true;\n    }\n    else if (use) {\n      if (use.length !== newProps.use.length) {\n        needUpdate = true;\n      } else {\n        let i = use.length;\n        while (i--) {\n          if (isPrimitiveType(use[i]) && isPrimitiveType(newProps.use[i])) {\n            if (use[i] !== newProps.use[i]) {\n              needUpdate = true\n            }\n          }\n          else if (typeof use[i].equals === 'function' && typeof newProps.use[i].equals === 'function') {\n            if (!use[i].equals(newProps.use[i])) { // fast equality check for immutable-js && mori\n              needUpdate = true;\n            }\n          }\n          else if (JSON.stringify(use[i]) !== JSON.stringify(newProps.use[i])) {\n            needUpdate = true;\n          }\n        }\n      }\n    }\n\n    if (needUpdate) {\n      layerStore.updateFn(newProps.id, newProps.children, newProps.to, null, newProps.use, newProps.defaultArgs, newProps.defaultShow);\n      return true;\n    }\n    return false;\n  }\n\n  componentWillUnmount() {\n    this.layerStore = null;\n  }\n\n  render() {\n    const { id, to, elementType } = this.props;\n    if (!to) {\n      return createElement(LayerMountPoint, { id });\n    }\n    return null;\n  }\n}\n\nLayer.propTypes = {\n  use: PropTypes.array\n};\n\nLayer.defaultProps = {\n  elementType: 'span'\n};\n\nLayer.contextTypes = {\n  layerStore: PropTypes.object\n};"]}